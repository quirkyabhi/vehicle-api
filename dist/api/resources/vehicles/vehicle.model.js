"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _mongoose = _interopRequireDefault(require("mongoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var schema = _mongoose["default"].Schema;
var vehicleSchema = new schema({
  // no:{type: Number, required: true},
  vehicleId: {
    type: Number
  },
  vehicleName: {
    type: String,
    required: true
  },
  description: {
    type: String
  },
  vehicleNo: {
    type: String,
    required: true,
    unique: true
  },
  vehicleType: {
    type: String,
    required: true
  },
  registrationNo: {
    type: String,
    required: true,
    unique: true
  },
  insuranceNo: {
    type: String,
    required: true,
    unique: true
  },
  rentPerDay: {
    type: Number,
    required: true
  },
  securityAmount: {
    type: Number,
    required: true,
    "default": 0
  },
  fine: {
    type: Number,
    required: true,
    "default": 100
  },
  url: {
    type: String
  },
  year: {
    type: Number
  },
  kmRan: {
    type: Number
  },
  model: {
    type: String
  },
  color: {
    type: String
  },
  isAvailable: {
    type: String
  },
  createdAt: {
    type: Date,
    "default": Date.now
  },
  isActive: {
    type: String,
    "default": "true"
  } // age: { type:Number , required: true},
  // gender: { type:String , required: true}

}, {
  collection: 'vehicles'
});

var _default = _mongoose["default"].model('Vehicle', vehicleSchema);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcGkvcmVzb3VyY2VzL3ZlaGljbGVzL3ZlaGljbGUubW9kZWwuanMiXSwibmFtZXMiOlsic2NoZW1hIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJ2ZWhpY2xlU2NoZW1hIiwidmVoaWNsZUlkIiwidHlwZSIsIk51bWJlciIsInZlaGljbGVOYW1lIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsInZlaGljbGVObyIsInVuaXF1ZSIsInZlaGljbGVUeXBlIiwicmVnaXN0cmF0aW9uTm8iLCJpbnN1cmFuY2VObyIsInJlbnRQZXJEYXkiLCJzZWN1cml0eUFtb3VudCIsImZpbmUiLCJ1cmwiLCJ5ZWFyIiwia21SYW4iLCJtb2RlbCIsImNvbG9yIiwiaXNBdmFpbGFibGUiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwiaXNBY3RpdmUiLCJjb2xsZWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLHFCQUFTQyxNQUF4QjtBQUNBLElBQU1DLGFBQWEsR0FBRSxJQUFJSCxNQUFKLENBQ2pCO0FBQ0k7QUFDQUksRUFBQUEsU0FBUyxFQUFDO0FBQUNDLElBQUFBLElBQUksRUFBQ0M7QUFBTixHQUZkO0FBR0lDLEVBQUFBLFdBQVcsRUFBRTtBQUFFRixJQUFBQSxJQUFJLEVBQUNHLE1BQVA7QUFBZUMsSUFBQUEsUUFBUSxFQUFFO0FBQXpCLEdBSGpCO0FBSUlDLEVBQUFBLFdBQVcsRUFBQztBQUFFTCxJQUFBQSxJQUFJLEVBQUNHO0FBQVAsR0FKaEI7QUFLSUcsRUFBQUEsU0FBUyxFQUFFO0FBQUVOLElBQUFBLElBQUksRUFBQ0csTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUUsSUFBekI7QUFBK0JHLElBQUFBLE1BQU0sRUFBRTtBQUF2QyxHQUxmO0FBTUlDLEVBQUFBLFdBQVcsRUFBRTtBQUFFUixJQUFBQSxJQUFJLEVBQUVHLE1BQVI7QUFBZ0JDLElBQUFBLFFBQVEsRUFBRTtBQUExQixHQU5qQjtBQU9JSyxFQUFBQSxjQUFjLEVBQUU7QUFBRVQsSUFBQUEsSUFBSSxFQUFFRyxNQUFSO0FBQWdCQyxJQUFBQSxRQUFRLEVBQUUsSUFBMUI7QUFBK0JHLElBQUFBLE1BQU0sRUFBRTtBQUF2QyxHQVBwQjtBQVFJRyxFQUFBQSxXQUFXLEVBQUU7QUFBQ1YsSUFBQUEsSUFBSSxFQUFFRyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRSxJQUF6QjtBQUErQkcsSUFBQUEsTUFBTSxFQUFFO0FBQXZDLEdBUmpCO0FBU0lJLEVBQUFBLFVBQVUsRUFBRTtBQUFFWCxJQUFBQSxJQUFJLEVBQUNDLE1BQVA7QUFBZUcsSUFBQUEsUUFBUSxFQUFFO0FBQXpCLEdBVGhCO0FBVUlRLEVBQUFBLGNBQWMsRUFBRTtBQUFFWixJQUFBQSxJQUFJLEVBQUNDLE1BQVA7QUFBZUcsSUFBQUEsUUFBUSxFQUFFLElBQXpCO0FBQStCLGVBQVM7QUFBeEMsR0FWcEI7QUFXSVMsRUFBQUEsSUFBSSxFQUFDO0FBQUNiLElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlRyxJQUFBQSxRQUFRLEVBQUUsSUFBekI7QUFBK0IsZUFBUTtBQUF2QyxHQVhUO0FBWUlVLEVBQUFBLEdBQUcsRUFBQztBQUFDZCxJQUFBQSxJQUFJLEVBQUVHO0FBQVAsR0FaUjtBQWFJWSxFQUFBQSxJQUFJLEVBQUU7QUFBRWYsSUFBQUEsSUFBSSxFQUFFQztBQUFSLEdBYlY7QUFjSWUsRUFBQUEsS0FBSyxFQUFFO0FBQUVoQixJQUFBQSxJQUFJLEVBQUNDO0FBQVAsR0FkWDtBQWVJZ0IsRUFBQUEsS0FBSyxFQUFDO0FBQUNqQixJQUFBQSxJQUFJLEVBQUVHO0FBQVAsR0FmVjtBQWdCSWUsRUFBQUEsS0FBSyxFQUFDO0FBQUNsQixJQUFBQSxJQUFJLEVBQUVHO0FBQVAsR0FoQlY7QUFpQklnQixFQUFBQSxXQUFXLEVBQUM7QUFBQ25CLElBQUFBLElBQUksRUFBRUc7QUFBUCxHQWpCaEI7QUFrQklpQixFQUFBQSxTQUFTLEVBQUM7QUFBQ3BCLElBQUFBLElBQUksRUFBR3FCLElBQVI7QUFBYyxlQUFVQSxJQUFJLENBQUNDO0FBQTdCLEdBbEJkO0FBbUJJQyxFQUFBQSxRQUFRLEVBQUM7QUFBRXZCLElBQUFBLElBQUksRUFBQ0csTUFBUDtBQUFlLGVBQVM7QUFBeEIsR0FuQmIsQ0FxQkk7QUFDQTs7QUF0QkosQ0FEaUIsRUEwQnJCO0FBQUNxQixFQUFBQSxVQUFVLEVBQUM7QUFBWixDQTFCcUIsQ0FBckI7O2VBNkJlNUIscUJBQVNxQixLQUFULENBQWUsU0FBZixFQUF5Qm5CLGFBQXpCLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5jb25zdCBzY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XG5jb25zdCB2ZWhpY2xlU2NoZW1hPSBuZXcgc2NoZW1hKFxuICAgIHsgICBcbiAgICAgICAgLy8gbm86e3R5cGU6IE51bWJlciwgcmVxdWlyZWQ6IHRydWV9LFxuICAgICAgICB2ZWhpY2xlSWQ6e3R5cGU6TnVtYmVyfSxcbiAgICAgICAgdmVoaWNsZU5hbWU6IHsgdHlwZTpTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICAgICAgZGVzY3JpcHRpb246eyB0eXBlOlN0cmluZyB9LFxuICAgICAgICB2ZWhpY2xlTm86IHsgdHlwZTpTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCB1bmlxdWU6IHRydWV9LFxuICAgICAgICB2ZWhpY2xlVHlwZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICAgICAgcmVnaXN0cmF0aW9uTm86IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSx1bmlxdWU6IHRydWV9LFxuICAgICAgICBpbnN1cmFuY2VObzoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIHVuaXF1ZTogdHJ1ZX0sXG4gICAgICAgIHJlbnRQZXJEYXk6IHsgdHlwZTpOdW1iZXIsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICAgICAgc2VjdXJpdHlBbW91bnQ6IHsgdHlwZTpOdW1iZXIsIHJlcXVpcmVkOiB0cnVlLCBkZWZhdWx0OiAwfSxcbiAgICAgICAgZmluZTp7dHlwZTogTnVtYmVyLCByZXF1aXJlZDogdHJ1ZSwgZGVmYXVsdDoxMDB9LFxuICAgICAgICB1cmw6e3R5cGU6IFN0cmluZ30sXG4gICAgICAgIHllYXI6IHsgdHlwZTogTnVtYmVyIH0sXG4gICAgICAgIGttUmFuOiB7IHR5cGU6TnVtYmVyIH0sXG4gICAgICAgIG1vZGVsOnt0eXBlOiBTdHJpbmd9LFxuICAgICAgICBjb2xvcjp7dHlwZTogU3RyaW5nfSxcbiAgICAgICAgaXNBdmFpbGFibGU6e3R5cGU6IFN0cmluZ30sXG4gICAgICAgIGNyZWF0ZWRBdDp7dHlwZSA6IERhdGUsIGRlZmF1bHQgOiBEYXRlLm5vd30sXG4gICAgICAgIGlzQWN0aXZlOnsgdHlwZTpTdHJpbmcsIGRlZmF1bHQ6IFwidHJ1ZVwifVxuXG4gICAgICAgIC8vIGFnZTogeyB0eXBlOk51bWJlciAsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICAgICAgLy8gZ2VuZGVyOiB7IHR5cGU6U3RyaW5nICwgcmVxdWlyZWQ6IHRydWV9XG4gICAgfVxuLFxue2NvbGxlY3Rpb246J3ZlaGljbGVzJ31cbilcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1ZlaGljbGUnLHZlaGljbGVTY2hlbWEpIl19