"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _mongoose = _interopRequireDefault(require("mongoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var schema = _mongoose["default"].Schema;
var custSchema = new schema({
  // no:{type: Number, required: true},
  userId: {
    type: Number
  },
  fname: {
    type: String,
    required: true
  },
  lname: {
    type: String,
    required: true
  },
  email: {
    type: String,
    required: true,
    unique: true
  },
  phone: {
    type: Number,
    required: true,
    unique: true
  },
  gender: {
    type: String,
    required: true
  },
  dlNo: {
    type: String,
    required: true,
    unique: true
  },
  password: {
    type: String,
    "default": "000000"
  },
  isActive: {
    type: String,
    "default": "true"
  },
  dob: {
    type: Date
  },
  age: {
    type: Number
  },
  address: {
    type: String
  },
  city: {
    type: String
  },
  state: {
    type: String
  },
  pin: {
    type: Number
  },
  altPhone: {
    type: Number
  },
  url: {
    type: String
  },
  createdAt: {
    type: Date,
    "default": Date.now
  },
  role: {
    type: String,
    "default": "user"
  } // age: { type:Number , required: true},
  // gender: { type:String , required: true}

}, {
  collection: 'users'
});

var _default = _mongoose["default"].model('User', custSchema);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcGkvcmVzb3VyY2VzL3VzZXJzL3VzZXIubW9kZWwuanMiXSwibmFtZXMiOlsic2NoZW1hIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJjdXN0U2NoZW1hIiwidXNlcklkIiwidHlwZSIsIk51bWJlciIsImZuYW1lIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJsbmFtZSIsImVtYWlsIiwidW5pcXVlIiwicGhvbmUiLCJnZW5kZXIiLCJkbE5vIiwicGFzc3dvcmQiLCJpc0FjdGl2ZSIsImRvYiIsIkRhdGUiLCJhZ2UiLCJhZGRyZXNzIiwiY2l0eSIsInN0YXRlIiwicGluIiwiYWx0UGhvbmUiLCJ1cmwiLCJjcmVhdGVkQXQiLCJub3ciLCJyb2xlIiwiY29sbGVjdGlvbiIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLHFCQUFTQyxNQUF4QjtBQUNBLElBQU1DLFVBQVUsR0FBRSxJQUFJSCxNQUFKLENBQ2Q7QUFDSTtBQUNBSSxFQUFBQSxNQUFNLEVBQUM7QUFBQ0MsSUFBQUEsSUFBSSxFQUFDQztBQUFOLEdBRlg7QUFHSUMsRUFBQUEsS0FBSyxFQUFFO0FBQUVGLElBQUFBLElBQUksRUFBQ0csTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUU7QUFBekIsR0FIWDtBQUlJQyxFQUFBQSxLQUFLLEVBQUU7QUFBRUwsSUFBQUEsSUFBSSxFQUFDRyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRTtBQUF6QixHQUpYO0FBS0lFLEVBQUFBLEtBQUssRUFBRTtBQUFFTixJQUFBQSxJQUFJLEVBQUNHLE1BQVA7QUFBZUMsSUFBQUEsUUFBUSxFQUFFLElBQXpCO0FBQStCRyxJQUFBQSxNQUFNLEVBQUU7QUFBdkMsR0FMWDtBQU1JQyxFQUFBQSxLQUFLLEVBQUU7QUFBRVIsSUFBQUEsSUFBSSxFQUFFQyxNQUFSO0FBQWdCRyxJQUFBQSxRQUFRLEVBQUUsSUFBMUI7QUFBZ0NHLElBQUFBLE1BQU0sRUFBRTtBQUF4QyxHQU5YO0FBT0lFLEVBQUFBLE1BQU0sRUFBRTtBQUFFVCxJQUFBQSxJQUFJLEVBQUVHLE1BQVI7QUFBZ0JDLElBQUFBLFFBQVEsRUFBRTtBQUExQixHQVBaO0FBUUlNLEVBQUFBLElBQUksRUFBRTtBQUFDVixJQUFBQSxJQUFJLEVBQUVHLE1BQVA7QUFBZUMsSUFBQUEsUUFBUSxFQUFFLElBQXpCO0FBQStCRyxJQUFBQSxNQUFNLEVBQUU7QUFBdkMsR0FSVjtBQVNJSSxFQUFBQSxRQUFRLEVBQUU7QUFBRVgsSUFBQUEsSUFBSSxFQUFDRyxNQUFQO0FBQWUsZUFBUTtBQUF2QixHQVRkO0FBVUlTLEVBQUFBLFFBQVEsRUFBRTtBQUFFWixJQUFBQSxJQUFJLEVBQUNHLE1BQVA7QUFBZSxlQUFTO0FBQXhCLEdBVmQ7QUFXSVUsRUFBQUEsR0FBRyxFQUFDO0FBQUNiLElBQUFBLElBQUksRUFBRWM7QUFBUCxHQVhSO0FBWUlDLEVBQUFBLEdBQUcsRUFBQztBQUFDZixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FaUjtBQWFJZSxFQUFBQSxPQUFPLEVBQUU7QUFBRWhCLElBQUFBLElBQUksRUFBRUc7QUFBUixHQWJiO0FBY0ljLEVBQUFBLElBQUksRUFBRTtBQUFFakIsSUFBQUEsSUFBSSxFQUFDRztBQUFQLEdBZFY7QUFlSWUsRUFBQUEsS0FBSyxFQUFDO0FBQUNsQixJQUFBQSxJQUFJLEVBQUVHO0FBQVAsR0FmVjtBQWdCSWdCLEVBQUFBLEdBQUcsRUFBQztBQUFDbkIsSUFBQUEsSUFBSSxFQUFFQztBQUFQLEdBaEJSO0FBaUJJbUIsRUFBQUEsUUFBUSxFQUFDO0FBQUNwQixJQUFBQSxJQUFJLEVBQUVDO0FBQVAsR0FqQmI7QUFrQklvQixFQUFBQSxHQUFHLEVBQUU7QUFBRXJCLElBQUFBLElBQUksRUFBQ0c7QUFBUCxHQWxCVDtBQW1CSW1CLEVBQUFBLFNBQVMsRUFBQztBQUFDdEIsSUFBQUEsSUFBSSxFQUFHYyxJQUFSO0FBQWMsZUFBVUEsSUFBSSxDQUFDUztBQUE3QixHQW5CZDtBQW9CSUMsRUFBQUEsSUFBSSxFQUFDO0FBQUV4QixJQUFBQSxJQUFJLEVBQUNHLE1BQVA7QUFBZSxlQUFTO0FBQXhCLEdBcEJULENBc0JJO0FBQ0E7O0FBdkJKLENBRGMsRUEyQmxCO0FBQUNzQixFQUFBQSxVQUFVLEVBQUM7QUFBWixDQTNCa0IsQ0FBbEI7O2VBOEJlN0IscUJBQVM4QixLQUFULENBQWUsTUFBZixFQUFzQjVCLFVBQXRCLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5jb25zdCBzY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XG5jb25zdCBjdXN0U2NoZW1hPSBuZXcgc2NoZW1hKFxuICAgIHsgICBcbiAgICAgICAgLy8gbm86e3R5cGU6IE51bWJlciwgcmVxdWlyZWQ6IHRydWV9LFxuICAgICAgICB1c2VySWQ6e3R5cGU6TnVtYmVyfSxcbiAgICAgICAgZm5hbWU6IHsgdHlwZTpTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICAgICAgbG5hbWU6IHsgdHlwZTpTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICAgICAgZW1haWw6IHsgdHlwZTpTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCB1bmlxdWU6IHRydWV9LFxuICAgICAgICBwaG9uZTogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlLCB1bmlxdWU6IHRydWV9LFxuICAgICAgICBnZW5kZXI6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZX0sXG4gICAgICAgIGRsTm86IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCB1bmlxdWU6IHRydWV9LFxuICAgICAgICBwYXNzd29yZDogeyB0eXBlOlN0cmluZywgZGVmYXVsdDpcIjAwMDAwMFwifSxcbiAgICAgICAgaXNBY3RpdmU6IHsgdHlwZTpTdHJpbmcsIGRlZmF1bHQ6IFwidHJ1ZVwifSxcbiAgICAgICAgZG9iOnt0eXBlOiBEYXRlfSxcbiAgICAgICAgYWdlOnt0eXBlOiBOdW1iZXJ9LFxuICAgICAgICBhZGRyZXNzOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgICAgICBjaXR5OiB7IHR5cGU6U3RyaW5nIH0sXG4gICAgICAgIHN0YXRlOnt0eXBlOiBTdHJpbmd9LFxuICAgICAgICBwaW46e3R5cGU6IE51bWJlcn0sXG4gICAgICAgIGFsdFBob25lOnt0eXBlOiBOdW1iZXJ9LFxuICAgICAgICB1cmw6IHsgdHlwZTpTdHJpbmcgfSxcbiAgICAgICAgY3JlYXRlZEF0Ont0eXBlIDogRGF0ZSwgZGVmYXVsdCA6IERhdGUubm93fSxcbiAgICAgICAgcm9sZTp7IHR5cGU6U3RyaW5nLCBkZWZhdWx0OiBcInVzZXJcIn1cblxuICAgICAgICAvLyBhZ2U6IHsgdHlwZTpOdW1iZXIgLCByZXF1aXJlZDogdHJ1ZX0sXG4gICAgICAgIC8vIGdlbmRlcjogeyB0eXBlOlN0cmluZyAsIHJlcXVpcmVkOiB0cnVlfVxuICAgIH1cbixcbntjb2xsZWN0aW9uOid1c2Vycyd9XG4pXG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdVc2VyJyxjdXN0U2NoZW1hKSJdfQ==